#configurer la datasource permettant d'accéder à la base de données H2 de l'application, avec ici une persistence de type file
#dans une vraie application, ce sera une base de données d'entreprise telle que Oracle, Postgresql, SQL Server, MySQL, etc.
spring.datasource.name=datawarehouse-db
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.url=jdbc:h2:file:./src/main/resources/database/datawarehouse-db
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.sql-script-encoding=UTF-8

#permet au démarrage de l'application Spring Boot de créer le schéma (tables, index, etc.) de notre base de données
#Par défaut, Spring Boot crée le schéma des métadonnées Spring Batch (c'est-à-dire, les tables de statistiques de Spring Batch)
#lorsque le droit d'écriture sur la base de données est autorisé.
spring.datasource.schema=classpath:schema/datawarehouse-schema.sql

#permet la visualisation web de la base de données H2 sur l'URL http://localhost:8080/h2-console/.
#http://localhost:8080/h2-console/
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

#configure les paramètres permettant la journalisation (log) des événements qui surviennent dans l'application.
logging.level.root=info
logging.file.max-size=10MB
logging.file.name=./logs/batch-datawarehouse-loader.log

#paramètre personnel qui indique l'endroit où trouver le répertoire central de dépôt des fichiers de commandes.
#c'est une annotation qui s'utilisera avec @Value("${path.to.the.work.dir}") au dessus d'un membre
working.directory=src/main/resources/datawarehouse-files-to-process

#lien vers ensemble des paramètres de configuration disponibles du fichier application.properties
#https://docs.spring.io/spring-boot/docs/current/reference/html/appendix-application-properties.html